{"version":3,"file":"angular-resize-element.js.map","sources":["ng://angular-resize-element/lib/angular-resize-element.enum.ts","ng://angular-resize-element/lib/angular-resize-element.directive.ts","ng://angular-resize-element/lib/angular-resize-element.module.ts"],"sourcesContent":["export enum AngularResizeElementDirection {\r\n    TOP = 'top',\r\n    TOP_RIGHT = 'top-right',\r\n    RIGHT = 'right',\r\n    BOTTOM_RIGHT = 'bottom-right',\r\n    BOTTOM = 'bottom',\r\n    BOTTOM_LEFT = 'bottom-left',\r\n    LEFT = 'left',\r\n    TOP_LEFT = 'top-left'\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    Output,\r\n    Renderer2,\r\n} from '@angular/core';\r\nimport {AngularResizeElementEvent} from './angular-resize-element-event.interface';\r\nimport {AngularResizeElementDirection} from './angular-resize-element.enum';\r\n\r\n// @ts-ignore\r\n@Directive({\r\n    selector: '[resize], [resizeStart], [resizeEnd]'\r\n})\r\nexport class AngularResizeElementDirective {\r\n    private mouseUpListener: () => void;\r\n    private mouseMoveListener: () => void;\r\n\r\n    private targetElementWidthValue: number;\r\n    private targetElementHeightValue: number;\r\n\r\n    private originalEvent: MouseEvent;\r\n\r\n    @Input()\r\n    public targetElement: HTMLElement | ElementRef;\r\n\r\n    @Input()\r\n    public direction: AngularResizeElementDirection;\r\n\r\n    @Input()\r\n    public proportionalResize: boolean;\r\n\r\n    @Input()\r\n    public applyClass = 'resizes';\r\n\r\n    @Output()\r\n    public resizeStart: EventEmitter<AngularResizeElementEvent> = new EventEmitter();\r\n\r\n    @Output()\r\n    public resize: EventEmitter<AngularResizeElementEvent> = new EventEmitter();\r\n\r\n    @Output()\r\n    public resizeEnd: EventEmitter<AngularResizeElementEvent> = new EventEmitter();\r\n\r\n\r\n\r\n    constructor(private readonly elementRef: ElementRef,\r\n                private readonly renderer2: Renderer2,\r\n    ) {}\r\n\r\n\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    public onMouseDown(evt: MouseEvent): void {\r\n        evt.preventDefault();\r\n\r\n        this.setOriginalData(evt);\r\n\r\n        this.resizeStart.emit(this.generateValuesForEvent(evt));\r\n\r\n        this.mouseUpListener = this.renderer2.listen('document', 'mouseup', event => this.onMouseUp(event));\r\n        this.mouseMoveListener = this.renderer2.listen('document', 'mousemove', event => this.onMouseMove(event));\r\n        this.renderer2.addClass(this.elementRef.nativeElement, 'resizes');\r\n    }\r\n\r\n\r\n\r\n    private onMouseUp(evt: MouseEvent): void {\r\n        const eventValues = this.generateValuesForEvent(evt);\r\n        this.resize.emit(eventValues);\r\n        this.mouseMoveListener();\r\n        this.mouseUpListener();\r\n\r\n        this.renderer2.removeClass(this.elementRef.nativeElement, this.applyClass);\r\n        this.resizeEnd.emit(eventValues);\r\n    }\r\n\r\n\r\n\r\n    private onMouseMove(evt: MouseEvent): void {\r\n        this.resize.emit(this.generateValuesForEvent(evt));\r\n    }\r\n\r\n\r\n\r\n    private setOriginalData(originalEvent: MouseEvent) {\r\n        this.originalEvent = originalEvent;\r\n\r\n        if (this.targetElement) {\r\n            const dataSource = this.targetElement instanceof ElementRef ? this.targetElement.nativeElement : this.targetElement;\r\n            this.targetElementWidthValue = dataSource.offsetWidth;\r\n            this.targetElementHeightValue = dataSource.offsetHeight;\r\n\r\n        } else {\r\n            this.targetElementWidthValue = 0;\r\n            this.targetElementHeightValue = 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private generateValuesForEvent(evt: MouseEvent): AngularResizeElementEvent {\r\n        const originalXValue = this.originalEvent.clientX;\r\n        const originalYValue = this.originalEvent.clientY;\r\n\r\n        let currentWidthValue = evt.clientX - originalXValue;\r\n        let currentHeightValue = evt.clientY - originalYValue;\r\n\r\n        switch (this.direction) {\r\n            case AngularResizeElementDirection.TOP:\r\n            case AngularResizeElementDirection.TOP_RIGHT: {\r\n                currentHeightValue *= -1;\r\n                break;\r\n            }\r\n            case AngularResizeElementDirection.BOTTOM_LEFT:\r\n            case AngularResizeElementDirection.LEFT: {\r\n                currentWidthValue *= -1;\r\n                break;\r\n            }\r\n            case AngularResizeElementDirection.TOP_LEFT: {\r\n                currentHeightValue *= -1;\r\n                currentWidthValue *= -1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        switch (this.direction) {\r\n            case AngularResizeElementDirection.TOP:\r\n            case AngularResizeElementDirection.BOTTOM: {\r\n                currentWidthValue = 0;\r\n                break;\r\n            }\r\n            case AngularResizeElementDirection.RIGHT:\r\n            case AngularResizeElementDirection.LEFT: {\r\n                currentHeightValue = 0;\r\n                break;\r\n            }\r\n        }\r\n\r\n        currentWidthValue += this.targetElementWidthValue;\r\n        currentHeightValue += this.targetElementHeightValue;\r\n\r\n        if (this.proportionalResize) {\r\n            if (currentWidthValue > currentHeightValue) {\r\n                currentWidthValue = currentHeightValue;\r\n            } else {\r\n                currentHeightValue = currentWidthValue;\r\n            }\r\n        }\r\n\r\n        return {\r\n            originalEvent: this.originalEvent,\r\n            currentWidthValue: currentWidthValue,\r\n            currentHeightValue: currentHeightValue,\r\n            originalWidthValue: this.targetElementWidthValue,\r\n            originalHeightValue: this.targetElementHeightValue,\r\n            differenceWidthValue: this.targetElementWidthValue - currentWidthValue,\r\n            differenceHeightValue: this.targetElementHeightValue - currentHeightValue,\r\n            direction: this.direction,\r\n        };\r\n    }\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {AngularResizeElementDirective} from './angular-resize-element.directive';\r\n\r\n@NgModule({\r\n    declarations: [AngularResizeElementDirective],\r\n    imports: [],\r\n    exports: [AngularResizeElementDirective]\r\n})\r\nexport class AngularResizeElementModule { }\r\n"],"names":[],"mappings":"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"}
